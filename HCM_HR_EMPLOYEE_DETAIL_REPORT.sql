SELECT  
		PAPF.PERSON_NUMBER PERSON_NUMBER 
		,PPNF.FULL_NAME
		,PPNF.LAST_NAME
		,PPNF.FIRST_NAME
		,PPNF.MIDDLE_NAMES
		,TO_CHAR(PP.DATE_OF_BIRTH ,'YYYY/MM/DD')   DATE_OF_BIRTH 
		,ASG.ASSIGNMENT_NUMBER "ASSIGNMENT NUMBER"	
        ,PAV.ACTION_NAME  "ASSIGNMENT CHANGE ACTION"
        ,PARV.ACTION_REASON "ASSIGNMENT CHANGE ACTION REASON"	
		,PASTV.USER_STATUS "ASSIGNMENT STATUS" 
		,hr_general.decode_lookup ('PART_FULL_TIME', ASG.FULL_PART_TIME) "FULL_PART_TIME"
		,ASG.BARGAINING_UNIT_CODE "BARGAINING UNIT" 
		,PPTV.USER_PERSON_TYPE "USER PERSON TYPE"
		,ASG.SYSTEM_PERSON_TYPE "SYSTEM PERSON TYPE"  
		,(SELECT MIN (TO_CHAR(WR1.DATE_START,'YYYY/MM/DD')) FROM PER_PERIODS_OF_SERVICE WR1 WHERE WR1.PERSON_ID=PAPF.PERSON_ID  ) "ENTERPRISE DATE OF HIRE"                  
		,TO_CHAR(WR.DATE_START,'YYYY/MM/DD')"DATE OF LATEST HIRE" 
		,hr_general.decode_lookup ('SEX', PPLF.SEX) GENDER
		,PD.NAME "DEPTNAME" 
		,HLAF.LOCATION_NAME "LOCATION NAME"                                               
        ,HLAF.INTERNAL_LOCATION_CODE "LOCATION CODE"
		,HLAF.REGION_2 "WORK STATE"
		,HLAF.ADDRESS_LINE_1 "WORK LOCATION ADDRESS LINE 1"
		,LEGAL.NAME "LEGAL ENTITY" 
		,ROUND((CS.ANNUAL_FT_SALARY/2080),2) "HOURLY RATE"
		,TO_CHAR(CS.DATE_FROM,'YYYY/MM/DD')"SALARY EFFECTIVE START DATE"
		,CS.ANNUAL_FT_SALARY
		,CS.RATE_MID_AMOUNT
		,CS.COMPA_RATIO
		,TO_CHAR(WR.ACTUAL_TERMINATION_DATE,'YYYY/MM/DD') "ACTUAL TERMINATION DATE" 
		,PAB.ACTION_NAME "SALARY CHANGE ACTION"
		,PARB.ACTION_REASON "SALARY CHANGE ACTION REASON"
		,TO_CHAR(ASG.EFFECTIVE_START_DATE,'YYYY/MM/DD') "ASSIGNMENT START DATE"
		,PPAUF.ADDRESS_TYPE "EMPLOYEE ADRESS TYPE"
		,PAF.ADDRESS_LINE_1  "EMPLOYEE ADDRESS LINE 1"                                                   
        ,PAF.TOWN_OR_CITY    "EMPLOYEE ADDRESS CITY"                                                                                                              
        ,PAF.REGION_2   "EMPLOYEE ADDRESS STATE"                                                        
        ,PAF.REGION_1      "EMPLOYEE ADDRESS COUNTY"                                                     
        ,PAF.POSTAL_CODE "EMPLOYEE ADDRESS ZIP CODE"
		,(SELECT  MAX(TO_CHAR (PSDF.SENIORITY_DATE, 'YYYY/MM/DD')) FROM
		PER_SENIORITY_DATES_F     PSDF WHERE      PAPF.PERSON_ID = PSDF.PERSON_ID  AND PSDF.SENIORITY_DATE_CODE = 'Enterprise Seniority Date' ) "ENTERPRISE_SENIORITY_DATE"
		,(SELECT MAX(TO_CHAR (PSDF.SENIORITY_DATE, 'YYYY/MM/DD')) FROM 
		PER_SENIORITY_DATES_F     PSDF WHERE      PAPF.PERSON_ID = PSDF.PERSON_ID  AND PSDF.SENIORITY_DATE_CODE = 'Service Award Date' ) SERVICE_AWARD_DATE
		,(SELECT MAX(TO_CHAR (PSDF.SENIORITY_DATE, 'YYYY/MM/DD')) FROM 
		PER_SENIORITY_DATES_F     PSDF WHERE      PAPF.PERSON_ID = PSDF.PERSON_ID  AND PSDF.SENIORITY_DATE_CODE = 'Union Seniority Date' ) UNION_SENIORITY_DATE
		,(SELECT MAX(TO_CHAR (PSDF.SENIORITY_DATE, 'YYYY/MM/DD')) FROM 
		PER_SENIORITY_DATES_F     PSDF WHERE      PAPF.PERSON_ID = PSDF.PERSON_ID  AND PSDF.SENIORITY_DATE_CODE = 'Time Off Date' ) TIME_OFF_DATE
		,(SELECT MAX(TO_CHAR (PSDF.SENIORITY_DATE, 'YYYY/MM/DD')) FROM 
		PER_SENIORITY_DATES_F     PSDF WHERE      PAPF.PERSON_ID = PSDF.PERSON_ID  AND PSDF.SENIORITY_DATE_CODE = 'Job Code Entry Date' ) JOB_CODE_ENTRY_DATE
		,(SELECT MAX(TO_CHAR (PSDF.SENIORITY_DATE, 'YYYY/MM/DD')) FROM 
		PER_SENIORITY_DATES_F     PSDF WHERE      PAPF.PERSON_ID = PSDF.PERSON_ID  AND PSDF.SENIORITY_DATE_CODE = '401k Date' ) "K_DATE"
		,(SELECT MAX(TO_CHAR (PSDF.SENIORITY_DATE, 'YYYY/MM/DD')) FROM 
		PER_SENIORITY_DATES_F     PSDF WHERE      PAPF.PERSON_ID = PSDF.PERSON_ID  AND PSDF.SENIORITY_DATE_CODE = 'Classification Date' ) CLASSIFICATION_DATE
		,(SELECT MAX(TO_CHAR (PSDF.SENIORITY_DATE, 'YYYY/MM/DD')) FROM 
		PER_SENIORITY_DATES_F     PSDF WHERE      PAPF.PERSON_ID = PSDF.PERSON_ID  AND PSDF.SENIORITY_DATE_CODE = 'Sick Leave Date' ) SICK_LEAVE_DATE
		,BUID.BU_NAME "BUSINESS UNIT NAME"
		,ASG.WORK_AT_HOME
		,PJFT.NAME "JOB NAME"
		,PJF.JOB_CODE
		,PJF.ATTRIBUTE_NUMBER1 "INCENTIVE TARGET"
		,PGFT.NAME "GRADE NAME"
		,PJLF.INFORMATION3 "EEO-1 category"
		,PJLF.INFORMATION1 "Overtime Status"
		,hr_general.decode_lookup ('EMP_CAT', ASG.EMPLOYMENT_CATEGORY) "ASSIGNMENT CATEGORY"
		,hr_general.decode_lookup ('REGULAR_TEMPORARY', ASG.PERMANENT_TEMPORARY_FLAG) "Regular or Temporary"
		,FVVT.TRANSLATED_VALUE  "DRUG CODE"
		,ZMM.SCHEDULE_NAME "SCHEDULE_NAME"
		,PAPF2.PERSON_NUMBER "SUPERVISOR EMPLOYEE NUMBER"
		,PPNF2.FULL_NAME  "SUPERVISOR EMPLOYEE FULL NAME"
		,(CASE WHEN ASG.ASSIGNMENT_STATUS_TYPE = 'INACTIVE' 
                   THEN PAV.ACTION_NAME 
			       ELSE ''
		      END) "TERMINATION ACTION"
		,(CASE WHEN ASG.ASSIGNMENT_STATUS_TYPE = 'INACTIVE' 
                   THEN  PARV.ACTION_REASON 
			       ELSE ''
		      END) "TERMINATION ACTION REASON"	  
		,PEA.EMAIL_ADDRESS "WORK EMAIL ADDRESS"
		,(CASE WHEN PHONESW1.PHONE_NUMBER IS NULL
                   THEN PHONESWM.PHONE_NUMBER
			       ELSE PHONESW1.PHONE_NUMBER 
				   END) "WORK PHONE NUMBER"
		
		,ASG.MANAGER_FLAG
		
  ,(CASE WHEN  (SELECT COUNT(*) FROM(SELECT LOOKUP.MEANING FROM HCM_LOOKUPS LOOKUP ,PER_ETHNICITIES PE WHERE PE.PERSON_ID=PAPF.PERSON_ID AND LOOKUP.LOOKUP_TYPE= 'PER_ETHNICITY' 
					AND LOOKUP.LOOKUP_CODE = PE.ETHNICITY)) >=2
                   THEN 'Two or more races'
			       ELSE (SELECT LOOKUP.MEANING FROM HCM_LOOKUPS LOOKUP ,PER_ETHNICITIES PE WHERE PE.PERSON_ID=PAPF.PERSON_ID AND LOOKUP.LOOKUP_TYPE= 'PER_ETHNICITY' AND LOOKUP.LOOKUP_CODE = PE.ETHNICITY)
		      END) "ETHNICITY"
	,(SELECT LOOKUP.MEANING FROM HCM_LOOKUPS LOOKUP  WHERE PPLF.PERSON_ID=PAPF.PERSON_ID AND LOOKUP.LOOKUP_TYPE= 'MAR_STATUS' AND LOOKUP.LOOKUP_CODE = PPLF.MARITAL_STATUS) "MARITAL_STATUS"
		,CSB.NAME "SALARY BASIS"
		,PNI.NATIONAL_IDENTIFIER_TYPE
		,PNI.NATIONAL_IDENTIFIER_NUMBER
		,(CASE WHEN ASG.LABOUR_UNION_MEMBER_FLAG = 'Y' 
                   THEN 'Yes'
				WHEN ASG.LABOUR_UNION_MEMBER_FLAG = 'N' 
                   THEN 'No'
			     ELSE ''
		      END) "REPRESENTED EMPLOYEE"
		,hr_general.decode_lookup ('ORA_HRX_US_VETS_SELFID_STATUS', PPLF.PER_INFORMATION14) "VETERAN_SELF_IDENTIFICATION_STATUS"
		,PPLF.PER_INFORMATION11 "DISABLED VETERAN"
		,PPLF.PER_INFORMATION12 "ACTV DTY WRTME OR CMPIGN BDGE VTRNS"
		,PPLF.PER_INFORMATION13 "ARMED FORCES SERVICE MEDAL VETERAN"
		,PPLF.PER_INFORMATION15 "RECENTLY SEPARATED VETERAN"
		,TO_CHAR(PPLF.PER_INFORMATION_DATE1,'YYYY/MM/DD') 			 "NEWLY_SEPARATED_VETERAN_DISCHARGE_DATE"
		,EXTID.GTS "GTS Legacy Person Number"
		,EXTID.MEC "MEC Legacy Person Number"
		,EXTID.NVE "NVE Legacy Person Number"
		,EXTID.NPG "NPG Legacy Person Number"
		,EXTID.PAC "PAC Legacy Person Number"
		,EXTID.ALTALINK "Altalink Legacy Person Number"
		,EXTRAINFO.PEN_DT "ABC US Pension Plan Effective Start Date"
		,EXTRAINFO.PEN_PLN "ABC US Pension Plan values"
		,EXTRAINFO1.RET_DT "ABC Retiree Medical Effective Start Date"
		,EXTRAINFO1.RET_VAL "ABC Retiree Medical values"
		,EXTRAINFO2.PRT_A_DT "CMS REPORTING PART A DATE"
		,EXTRAINFO2.PRT_A_VAL "CMS REPORTING PART A values"
		,EXTRAINFO2.PRT_B_DT "CMS REPORTING PART B DATE"
		,EXTRAINFO2.PRT_B_VAL "CMS REPORTING PART B values"
		,EXTRAINFO3.EFF_DT "ABC Non discrimination Test HCE Effective Date"
		,EXTRAINFO3.K_FLAG "ABC Non discrimination Test HCE 401k Flag"
		,EXTRAINFO3.HEALTH_FLAG "ABC Non discrimination Test HCE  Health & Welfare Flag"
		,EXTRAINFO3.HCE_OFF "ABC Non discrimination Test HCE Officer"
		,EXTRAINFO4.RE_WEL_PLN "ABC Retiree Welfare Benefit Plan"
		,EXTRAINFO4.DT_PCT "Date of Participation"
		,EXTRAINFO5.BGV_DT "ABC Background Check Date"	
		,REGION.A "SUB DIVISION"
		,REGION.B "DIVISION"
        		
		
FROM
        PER_ASSIGNMENT_SECURED_LIST_V               ASG    
		,PER_ALL_PEOPLE_F                    PAPF  
		,PER_PERSON_NAMES_F                  PPNF
		,PER_PERSON_TYPES_VL                 PPTV
		,PER_PERIODS_OF_SERVICE              WR
		,PER_PEOPLE_LEGISLATIVE_F            PPLF 
		,PER_DEPARTMENTS                     PD  
		,HR_LOCATIONS_ALL_F_VL               HLAF
		,XLE_ENTITY_PROFILES                 LEGAL
		,HR_ALL_ORGANIZATION_UNITS_F         ORG
		,CMP_SALARY CS
		,PER_ACTIONS_TL PAB
		,PER_ACTION_REASONS_TL PARB
		,PER_ADDRESSES_F          PAF
		,PER_PERSON_ADDR_USAGES_F    PPAUF 
		,PER_ASSIGNMENT_STATUS_TYPES_VL      PASTV  
		,FUN_ALL_BUSINESS_UNITS_V        BUID
		,PER_JOBS_F	PJF
		,PER_JOBS_F_TL PJFT
		,PER_GRADES_F_TL PGFT
		,PER_JOB_LEG_F PJLF
		,PER_SCHEDULE_ASSIGNMENTS PSA
		,PER_ASSIGNMENT_SUPERVISORS_F PASF
		,PER_NATIONAL_IDENTIFIERS PNI
		,PER_PERSONS                         PP    
		,PER_PHONES PHONESW1
		,PER_PHONES PHONESWM
		,PER_ALL_PEOPLE_F PAPF2
		,PER_PERSON_NAMES_F  PPNF2
		,PER_ACTIONS_VL  PAV
		,PER_ACTION_REASONS_VL PARV
		,PER_EMAIL_ADDRESSES PEA 
		,FND_VS_VALUES_B FVVB
		,FND_VS_VALUES_TL FVVT
		,ZMM_SR_SCHEDULES_TL ZMM
		,CMP_SALARY_BASES CSB
		
,(SELECT SUBDIV.NAME A
		,pgtn_rf.pk1_value,DIV.NAME B FROM 
           per_org_tree_node_rf pgtn_rf
           , hr_all_organization_units_f_vl SUBDIV 
           , HR_ORG_UNIT_CLASSIFICATIONS_X HOUCX
           ,hr_organization_information_f hoif
		   ,per_org_tree_node_rf pgtn_rf1
           , hr_all_organization_units_f_vl DIV 
           , HR_ORG_UNIT_CLASSIFICATIONS_X HOUCX1
           ,hr_organization_information_f hoif1
           WHERE 
		   1=1
          
		   
            AND pgtn_rf.TREE_STRUCTURE_CODE='PER_ORG_TREE_STRUCTURE'
            AND pgtn_rf.TREE_CODE='ABC_HCM_ORG_TREE' 
            AND SUBDIV.ORGANIZATION_ID=pgtn_rf.ANCESTOR_PK1_VALUE
            AND HOUCX.ORGANIZATION_ID=pgtn_rf.ANCESTOR_PK1_VALUE
            AND HOUCX.CLASSIFICATION_CODE='HCM_DIVISION'
            AND hoif.ORGANIZATION_ID=pgtn_rf.ANCESTOR_PK1_VALUE
            AND hoif.ORG_INFORMATION1='Region'
			AND pgtn_rf1.pk1_value=pgtn_rf.pk1_value
			AND pgtn_rf1.TREE_STRUCTURE_CODE='PER_ORG_TREE_STRUCTURE'
            AND pgtn_rf1.TREE_CODE='ABC_HCM_ORG_TREE' 
            AND DIV.ORGANIZATION_ID=pgtn_rf1.ANCESTOR_PK1_VALUE
            AND HOUCX1.ORGANIZATION_ID=pgtn_rf1.ANCESTOR_PK1_VALUE
            AND HOUCX1.CLASSIFICATION_CODE='HCM_DIVISION'
            AND hoif1.ORGANIZATION_ID=pgtn_rf1.ANCESTOR_PK1_VALUE
            AND hoif1.ORG_INFORMATION1='Function') REGION	
			,(SELECT PPEI.PERSON_ID
              ,TO_CHAR(PPEI.EFFECTIVE_START_DATE,'YYYY/MM/DD') PEN_DT
			  ,TO_CHAR(PPEI.PEI_INFORMATION1) PEN_PLN
			   
			  
			  FROM PER_PEOPLE_EXTRA_INFO PPEI
			  WHERE PPEI.INFORMATION_TYPE ='US Pension Plan'
			  )EXTRAINFO
			  ,(SELECT PPEI.PERSON_ID
			  , TO_CHAR(PPEI.PEI_INFORMATION_DATE1,'YYYY/MM/DD') RET_DT
			  , TO_CHAR(PPEI.PEI_INFORMATION1) RET_VAL
			   
			  
			  FROM PER_PEOPLE_EXTRA_INFO PPEI
			  WHERE PPEI.INFORMATION_TYPE ='ABC Retiree Medical'
			  )EXTRAINFO1
			  ,(SELECT PPEI.PERSON_ID
			  ,TO_CHAR(PPEI.PEI_INFORMATION_DATE1,'YYYY/MM/DD') PRT_A_DT
			  ,TO_CHAR(PPEI.PEI_INFORMATION1) PRT_A_VAL
			  , TO_CHAR(PPEI.PEI_INFORMATION_DATE2,'YYYY/MM/DD') PRT_B_DT
			  , TO_CHAR(PPEI.PEI_INFORMATION2) PRT_B_VAL
			   
			  
			  FROM PER_PEOPLE_EXTRA_INFO PPEI
			  WHERE PPEI.INFORMATION_TYPE ='BEN Medicare CMS Reporting'
			  )EXTRAINFO2
			  ,(SELECT PPEI.PERSON_ID
			  , TO_CHAR(PPEI.PEI_INFORMATION_DATE1,'YYYY/MM/DD') EFF_DT
			  , TO_CHAR(PPEI.PEI_INFORMATION1) K_FLAG
			  ,TO_CHAR(PPEI.PEI_INFORMATION2) HEALTH_FLAG
			  , TO_CHAR(PPEI.PEI_INFORMATION3) HCE_OFF
			   
			  
			  FROM PER_PEOPLE_EXTRA_INFO PPEI
			  WHERE PPEI.INFORMATION_TYPE ='ABC Non-Discrm Test Info'
			  )EXTRAINFO3
			  ,(SELECT PPEI.PERSON_ID
			  , TO_CHAR(PPEI.PEI_INFORMATION1) RE_WEL_PLN
			  ,TO_CHAR(PPEI.PEI_INFORMATION_DATE2,'YYYY/MM/DD') DT_PCT
			   
			  
			  FROM PER_PEOPLE_EXTRA_INFO PPEI
			  WHERE PPEI.INFORMATION_TYPE ='Retiree Welfare Benefit Plan'
			  )EXTRAINFO4
			  ,(SELECT PPEI.PERSON_ID
			  , TO_CHAR(PPEI.PEI_INFORMATION_DATE1,'YYYY/MM/DD') BGV_DT
			  
			   
			  
			  FROM PER_PEOPLE_EXTRA_INFO PPEI
			  WHERE PPEI.INFORMATION_TYPE ='ABC Background Check Date'
			  )EXTRAINFO5
			   ,(SELECT PEAI.PERSON_ID
			,MAX(CASE WHEN PEAI.EXT_IDENTIFIER_TYPE='ABC_GTS_LEGACY_PN' 
                   THEN TO_CHAR(PEAI.EXT_IDENTIFIER_NUMBER)
			       ELSE ''
		      END) GTS
			  ,MAX(CASE WHEN PEAI.EXT_IDENTIFIER_TYPE='ABC_MEC_LEGACY_PN' 
                   THEN TO_CHAR(PEAI.EXT_IDENTIFIER_NUMBER)
			       ELSE ''
		      END) MEC
			  ,MAX(CASE WHEN PEAI.EXT_IDENTIFIER_TYPE='ABC_NVE_LEGACY_PN' 
                   THEN TO_CHAR(PEAI.EXT_IDENTIFIER_NUMBER)
			       ELSE ''
		      END) NVE
			  ,MAX(CASE WHEN PEAI.EXT_IDENTIFIER_TYPE='ABC_NPG_LEGACY_PN' 
                   THEN TO_CHAR(PEAI.EXT_IDENTIFIER_NUMBER)
			       ELSE ''
		      END) NPG
			  ,MAX(CASE WHEN PEAI.EXT_IDENTIFIER_TYPE='ABC_PAC_LEGACY_PN' 
                   THEN TO_CHAR(PEAI.EXT_IDENTIFIER_NUMBER)
			       ELSE ''
		      END) PAC
			  ,MAX(CASE WHEN PEAI.EXT_IDENTIFIER_TYPE='ABC_ALTALINK_LEGACY_PN' 
                   THEN TO_CHAR(PEAI.EXT_IDENTIFIER_NUMBER)
			       ELSE ''
		      END) ALTALINK
			  FROM PER_EXT_APP_IDENTIFIERS PEAI
			  WHERE PEAI.EXT_IDENTIFIER_TYPE IN ('ABC_GTS_LEGACY_PN','ABC_MEC_LEGACY_PN','ABC_NVE_LEGACY_PN','ABC_NPG_LEGACY_PN','ABC_PAC_LEGACY_PN','ABC_ALTALINK_LEGACY_PN')
GROUP BY
PEAI.PERSON_ID
 			  ) EXTID
			  
			 
			 
			  
		
		
WHERE
        1=1
AND     ASG.ASSIGNMENT_TYPE          IN     ('E','C')
AND     ASG.PERSON_ID             =      PAPF.PERSON_ID
AND     PAPF.PERSON_ID               =      PP.PERSON_ID
AND     PAPF.PERSON_ID               =      PPNF.PERSON_ID
AND     ASG.PERSON_TYPE_ID         =      PPTV.PERSON_TYPE_ID
AND     ASG.PERIOD_OF_SERVICE_ID    =      WR.PERIOD_OF_SERVICE_ID
AND     PAPF.PERSON_ID               =      PPLF.PERSON_ID(+) 
AND     ASG.ORGANIZATION_ID          =      PD.ORGANIZATION_ID(+)
AND     ASG.LOCATION_ID              =      HLAF.LOCATION_ID(+)
AND     WR.LEGAL_ENTITY_ID(+)           =      ORG.ORGANIZATION_ID
AND     ORG.LEGAL_ENTITY_ID(+)          =      LEGAL.LEGAL_ENTITY_ID
AND 	ASG.ASSIGNMENT_ID		     =		CS.ASSIGNMENT_ID(+)
AND     CS.ACTION_ID			 =		PAB.ACTION_ID(+)
AND     CS.ACTION_REASON_ID         =      PARB.ACTION_REASON_ID(+)
AND     PPNF.NAME_TYPE              =      'GLOBAL'
AND     PPAUF.ADDRESS_ID       	 = PAF.ADDRESS_ID(+)
AND     PPAUF.PERSON_ID(+)   		 = PAPF.PERSON_ID
AND     ASG.ASSIGNMENT_STATUS_TYPE_ID =      PASTV.ASSIGNMENT_STATUS_TYPE_ID
AND     ASG.BUSINESS_UNIT_ID         =      BUID.BU_ID(+)
AND     ASG.JOB_ID			=		PJF.JOB_ID(+)
AND     ASG.JOB_ID				=		PJFT.JOB_ID(+)
AND    ASG.GRADE_ID                 =      PGFT.GRADE_ID(+)
AND    ASG.JOB_ID			=PJLF.JOB_ID(+)
AND 	ASG.ASSIGNMENT_ID=PSA.RESOURCE_ID(+)
AND 	ASG.ASSIGNMENT_ID=PASF.ASSIGNMENT_ID(+)
AND    PASF.MANAGER_ID=PAPF2.PERSON_ID(+)
AND    PAPF2.PERSON_ID=PPNF2.PERSON_ID(+)
AND 	PSA.RESOURCE_TYPE(+) = 'ASSIGN'
AND PSA.SCHEDULE_ID = ZMM.SCHEDULE_ID(+)
AND ZMM.LANGUAGE(+)='US'
AND     PAPF.PERSON_ID               =      PNI.PERSON_ID(+)
AND PJLF.LEGISLATION_CODE(+)='US'
AND       PD.ORGANIZATION_ID=REGION.pk1_value(+)
AND PAPF.PERSON_ID=PEA.PERSON_ID(+)
AND PAPF.PERSON_ID = EXTID.PERSON_ID(+)
AND CS.SALARY_BASIS_ID=CSB.SALARY_BASIS_ID(+)
AND    PAPF.PERSON_ID = EXTRAINFO.PERSON_ID(+)
AND    PAPF.PERSON_ID = EXTRAINFO1.PERSON_ID(+)
AND    PAPF.PERSON_ID = EXTRAINFO2.PERSON_ID(+)
AND    PAPF.PERSON_ID = EXTRAINFO3.PERSON_ID(+)
AND    PAPF.PERSON_ID = EXTRAINFO4.PERSON_ID(+)
AND    PAPF.PERSON_ID = EXTRAINFO5.PERSON_ID(+)
AND ASG.ASS_ATTRIBUTE2=FVVB.VALUE(+)
AND FVVB.VALUE_ID=FVVT.VALUE_ID(+)
AND FVVB.ATTRIBUTE_CATEGORY(+)='ABC_DRUG_CODE'
AND FVVB.ENABLED_FLAG(+)='Y'
AND FVVT.LANGUAGE(+)='US'
AND PAPF.PERSON_ID=PHONESW1.PERSON_ID(+)
AND PAPF.PERSON_ID=PHONESWM.PERSON_ID(+)
AND PHONESW1.PHONE_TYPE(+) ='W1'
AND PHONESWM.PHONE_TYPE(+) ='WM'
AND ASG.ACTION_CODE=PAV.ACTION_CODE(+)
AND ASG.REASON_CODE=PARV.ACTION_REASON_CODE(+)
AND PJFT.LANGUAGE(+)='US'
AND PGFT.LANGUAGE(+)='US'
AND PAB.LANGUAGE(+)='US'
AND PARB.LANGUAGE(+)='US'
AND PPNF2.NAME_TYPE(+) ='GLOBAL'
AND PEA.EMAIL_TYPE(+)='W1'
AND  TRUNC(SYSDATE) BETWEEN PPNF2.EFFECTIVE_START_DATE(+)       AND     PPNF2.EFFECTIVE_END_DATE(+)
AND  TRUNC(SYSDATE) BETWEEN PPLF.EFFECTIVE_START_DATE       AND     PPLF.EFFECTIVE_END_DATE
and (CASE 
     WHEN ASG.effective_start_date >= CS.date_from(+)
     THEN ASG.effective_start_date 
     WHEN ASG.effective_start_date < CS.date_from(+)
     THEN ASG.EFFECTIVE_END_DATE 
END
)BETWEEN CS.date_from(+) AND CS.date_to(+)
AND     ASG.EFFECTIVE_START_DATE BETWEEN PASF.EFFECTIVE_START_DATE (+)      AND     PASF.EFFECTIVE_END_DATE (+)
AND     ASG.EFFECTIVE_START_DATE BETWEEN PAPF.EFFECTIVE_START_DATE       AND     PAPF.EFFECTIVE_END_DATE 
AND     ASG.EFFECTIVE_START_DATE BETWEEN PPNF.EFFECTIVE_START_DATE       AND     PPNF.EFFECTIVE_END_DATE 
AND     ASG.EFFECTIVE_START_DATE BETWEEN PJF.EFFECTIVE_START_DATE   (+) AND     PJF.EFFECTIVE_END_DATE   (+)
AND     ASG.EFFECTIVE_START_DATE BETWEEN PD.EFFECTIVE_START_DATE     (+) AND     PD.EFFECTIVE_END_DATE     (+)
AND     ASG.EFFECTIVE_START_DATE  BETWEEN HLAF.EFFECTIVE_START_DATE   (+) AND     HLAF.EFFECTIVE_END_DATE   (+)
AND     ASG.EFFECTIVE_START_DATE BETWEEN ORG.EFFECTIVE_START_DATE        AND     ORG.EFFECTIVE_END_DATE
AND     ASG.EFFECTIVE_START_DATE BETWEEN PPAUF.EFFECTIVE_START_DATE(+)       AND     PPAUF.EFFECTIVE_END_DATE(+)
AND     ASG.EFFECTIVE_START_DATE BETWEEN PAF.EFFECTIVE_START_DATE(+)       AND     PAF.EFFECTIVE_END_DATE(+)
AND     ASG.EFFECTIVE_START_DATE BETWEEN PJFT.EFFECTIVE_START_DATE(+)       AND     PJFT.EFFECTIVE_END_DATE(+)
AND     ASG.EFFECTIVE_START_DATE BETWEEN PGFT.EFFECTIVE_START_DATE(+)       AND     PGFT.EFFECTIVE_END_DATE(+)
AND     ASG.EFFECTIVE_START_DATE BETWEEN PJLF.EFFECTIVE_START_DATE(+)       AND     PJLF.EFFECTIVE_END_DATE(+)
AND     ASG.EFFECTIVE_START_DATE BETWEEN PJF.EFFECTIVE_START_DATE(+)       AND     PJF.EFFECTIVE_END_DATE(+)
AND     ASG.EFFECTIVE_START_DATE BETWEEN PASF.EFFECTIVE_START_DATE   (+) AND     PASF.EFFECTIVE_END_DATE   (+)
AND PPNF.FIRST_NAME NOT IN ('Service Account')
AND PAPF.PERSON_NUMBER NOT IN ('3000000')
AND ( PPTV.USER_PERSON_TYPE IN (:P_USER_PERSON_TYPE) OR least(:P_USER_PERSON_TYPE) is null )
AND ( ASG.SYSTEM_PERSON_TYPE IN (:P_SYSTEM_PERSON_TYPE) OR least(:P_SYSTEM_PERSON_TYPE) is null )
AND ( LEGAL.NAME IN (:P_COMPANY_LE) OR least(:P_COMPANY_LE) is null )
AND ( PAPF.PERSON_ID IN (:P_EMP_NUMBER_NAME ) OR least(:P_EMP_NUMBER_NAME) is null )
AND (NVL(TO_DATE(TO_CHAR(:P_ASSIGNMENT_START_DATE, 'YYYY/MM/DD'),'YYYY/MM/DD'),TO_DATE(TO_CHAR(ASG.EFFECTIVE_START_DATE, 'YYYY/MM/DD'),'YYYY/MM/DD')) <= TO_DATE(TO_CHAR(ASG.EFFECTIVE_START_DATE, 'YYYY/MM/DD'),'YYYY/MM/DD'))

AND (NVL(TO_DATE(TO_CHAR(:P_ASSIGNMENT_END_DATE, 'YYYY/MM/DD'),'YYYY/MM/DD'),TO_DATE(TO_CHAR(ASG.EFFECTIVE_END_DATE, 'YYYY/MM/DD'),'YYYY/MM/DD')) >= TO_DATE(TO_CHAR(ASG.EFFECTIVE_END_DATE, 'YYYY/MM/DD'),'YYYY/MM/DD'))



ORDER BY 
PAPF.PERSON_NUMBER,
LEGAL.NAME,
ASG.EFFECTIVE_START_DATE DESC,
CS.DATE_FROM DESC